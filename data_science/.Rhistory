?read.csv
)
library(plyr)
library(ggplot2)
library(reshape2)
vehicles <- read.csv(unzip("/tmp/vehicles.csv.zip", "vehicles.csv"),
stringsAsFactors = F)
labels <- read.table("varlabels.txt", sep = "-", header =
FALSE)
mpgByYr <- ddply(vehicles, ~year, summarise, avgMPG =
mean(comb08), avgHghy = mean(highway08), avgCity =
mean(city08))
load("~/Proyectos/MLStuff/data_science/rstudio.RData")
load("~/Proyectos/MLStuff/data_science/rstudio.RData")
load("~/Proyectos/MLStuff/data_science/.RData")
setwd("~/Proyectos/MLStuff/data_science")
setwd("~/Proyectos/MLStuff/data_science")
load("~/Proyectos/MLStuff/data_science/rstudio.RData")
load("~/Proyectos/MLStuff/data_science/.RData")
mpgByYr <- ddply(vehicles, ~year, summarise, avgMPG =
mean(comb08), avgHghy = mean(highway08), avgCity =
mean(city08))
View(mpgByYr)
?ddply
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth() + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
ggplot(mpgByYr, aes(year, avgMPG))
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point()
ggplot(mpgByYr, c(year, avgMPG)) + geom_point()
?aes
aes(year,year)
aes(year,avgMPG)
?ggplot
?geom_smooth
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth(span = 0.3) + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth(span = 0.3,method = "lm"
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth(span = 0.3,method = "lm") + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth(method = "lm", span = 0.3) + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth(method = "lm", span = 0.3, se = FALSE) + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth(method = "glm", span = 0.3, se = FALSE) + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth(method = "loess", span = 0.3, se = FALSE) + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
ggplot(mpgByYr, aes(year, avgMPG)) + geom_point() +
geom_smooth() + xlab("Year") + ylab("Average MPG") +
ggtitle("All cars")
# R Cheatsheet
## Interesting packages
```install.packages(c("tidyr", "stringr", "lubridate", "ggplot2", "ggvis", "rgl", "htmlwidgets", "googleVis", "car", "mgcv", "lme4", "nlme", "randomForest", "multcomp", "vcd", "glmnet", "survival", "caret", "shiny", "xtable", "sp ", "maptools", "maps", "ggmap", "jsonlite", "httr","foreach", "e1071", "gbm", "knitr", "proto", "labeling", "scales", "manipulate", "reshape2", "plyr"))```
## Essential
- `library(name)`: Imports a installed library
## Common stuff
- Read a csv: `read.csv(filename, header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, ...)`
- Download a file: `download.file(url, output_name)`
## Package specific
### pylr
-`ddply`: Split, apply function, and return data frame.
*  `ddply(.data, .variables, .fun, ...)`
*Ex: `ddply(vehicles, ~year, summarise, mean(comb08))` --> Avg MPG by each year
## Tips and tricks
- `read.csv` takes an argument stringsAsFactors, set to `F` to prevent importing strings as categorical variables
typeof(gasCars$displ)
gasCars <- subset(vehicles, fuelType1 %in% c("Regular
;
)
gasCars <- subset(vehicles, fuelType1 %in% c("Regular
gasCars <- subset(vehicles, fuelType1 %in% c("Regular
Gasoline", "Premium Gasoline", "Midgrade Gasoline") &
fuelType2 == "" & atvType != "Hybrid")
mpgByYr_Gas <- ddply(gasCars, ~year, summarise, avgMPG =
mean(comb08))
library(ddply)
mpgByYr_Gas <- ddply(gasCars, ~year, summarise, avgMPG =
mean(comb08))
mpgByYr_Gas <- ddply(gasCars, ~year, summarise, avgMPG =
mean(comb08))
install.packages(c("tidyr", "stringr", "lubridate", "ggplot2", "ggvis", "rgl", "htmlwidgets", \
"googleVis", "car", "mgcv", "lme4", "nlme", "randomForest", \
"multcomp", "vcd", "glmnet", "survival", "caret", "shiny", \
"xtable", "sp ", "maptools", "maps", "ggmap", "jsonlite", \
"httr","foreach", "e1071", "gbm", "knitr", \
"proto", "labeling", "scales", "manipulate", "reshape2", "plyr"))
install.packages(c("tidyr", "stringr", "lubridate", "ggplot2", "ggvis", "rgl", "htmlwidgets",
"googleVis", "car", "mgcv", "lme4", "nlme", "randomForest",
"multcomp", "vcd", "glmnet", "survival", "caret", "shiny",
"xtable", "sp ", "maptools", "maps", "ggmap", "jsonlite",
"httr","foreach", "e1071", "gbm", "knitr",
"proto", "labeling", "scales", "manipulate", "reshape2", "plyr"))
gasCars <- subset(vehicles, fuelType1 %in% c("Regular
Gasoline", "Premium Gasoline", "Midgrade Gasoline") &
fuelType2 == "" & atvType != "Hybrid")
?subset
mpgByYr_Gas <- ddply(gasCars, ~year, summarise, avgMPG =
mean(comb08))
library(ddply)
library('ddply')
ins
library(plyr)
mpgByYr_Gas <- ddply(gasCars, ~year, summarise, avgMPG =
mean(comb08))
View(mpgByYr_Gas)
View(mpgByYr)
View(mpgByYr_Gas)
ggplot(mpgByYr_Gas, aes(year, avgMPG)) + geom_point() +
geom_smooth() + xlab("Year") + ylab("Average MPG") +
ggtitle("Gasoline cars")
library(ggplot2)
ggplot(mpgByYr_Gas, aes(year, avgMPG)) + geom_point() +
geom_smooth() + xlab("Year") + ylab("Average MPG") +
ggtitle("Gasoline cars")
typeof(gasCars$displ)
View(gasCars$displ)
ggplot(gasCars, aes(displ, comb08)) + geom_point() +
geom_smooth()
avgCarSize <- ddply(gasCars, ~year, summarise, avgDispl =
mean(displ))
View(avgCarSize)
ggplot(avgCarSize, aes(year, avgDispl)) + geom_point() +
geom_smooth() + xlab("Year") + ylab("Average engine
displacement (l)")
ggplot(avgCarSize, aes(year, avgDispl)) + geom_point() +
geom_smooth() + xlab("Year") + ylab("Average engine
displacement (l)")
byYear <- ddply(gasCars, ~year, summarise, avgMPG =
mean(comb08), avgDispl = mean(displ))
View(byYear)
byYear2 = melt(byYear, id = "year")
levels(byYear2$variable) <- c("Average MPG", "Avg engine
displacement")
byYear2 <- melt(byYear, id = "year")
levels(byYear2$variable) <- c("Average MPG", "Avg engine
displacement")
byYear2 <- melt(byYear, id = "year")
library(reshape2)
melt
byYear2 = melt(byYear, id = "year")
View(byYear2)
View(byYear)
View(byYear2)
View(byYear)
View(byYear2)
View(byYear)
View(byYear2)
levels(byYear2$variable)
levels(byYear2$variable) <- c("Average MPG", "Avg engine
displacement")
View(byYear2)
levels(byYear2)
levels(byYear2$year )
levels(byYear2$variable )
levels(byYear2$value )
?levels
x <- gl(2, 4, 8)
levels(x)[1] <- "low"
levels(x)[2] <- "high"
x
x <- gl(2, 4, 8)
x
View(x)
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
library(ggplot2)
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth()
View(byYear2)
+ facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 2, scales =
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 3, scales =
"free_y") + xlab("Year") + ylab("")
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1) + xlab("Year") + ylab("")
ggplot(byYear2, aes(year, value)) + geom_point() +
geom_smooth() + facet_wrap(~variable, ncol = 1, scales =
"free_y") + xlab("Year") + ylab("")
?facet_wrap
?facets
??facets
??facet
?facet_wrap
gasCars4 <- subset(gasCars, cylinders == "4")
gasCars4 <- subset(gasCars, cylinders == "4")
ggplot(gasCars4, aes(factor(year), comb08)) + geom_boxplot()
+ facet_wrap(~trany2, ncol = 1) + theme(axis.text.x = element_text(angle = 45)) + labs(x = "Year", y = "MPG")
gasCars4 <- subset(gasCars, cylinders == "4")
ggplot(gasCars4, aes(year, comb08)) + geom_boxplot()
+ facet_wrap(~trany2, ncol = 1) + theme(axis.text.x = element_text(angle = 45)) + labs(x = "Year", y = "MPG")
gasCars4 <- subset(gasCars, cylinders == "4")
ggplot(gasCars4, aes(factor(year), comb08)) + geom_boxplot()
+ facet_wrap(~trany2, ncol = 1) + theme(axis.text.x = element_text(angle = 45)) + labs(x = "Year", y = "MPG")
gasCars4 <- subset(gasCars, cylinders == "4")
ggplot(gasCars4, aes(factor(year), comb08)) + geom_boxplot() + facet_wrap(~trany2, ncol = 1) + theme(axis.text.x = element_text(angle = 45)) + labs(x = "Year", y = "MPG")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar(position = "fill") + labs(x = "Year", y = "Proportion
of cars", fill = "Transmission") + theme(axis.text.x =
element_text(angle = 45)) + geom_hline(yintercept = 0.5,
linetype = 2)
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar() + labs(x = "Year", y = "Proportion
of cars", fill = "Transmission") + theme(axis.text.x =
element_text(angle = 45)) + geom_hline(yintercept = 0.5,
linetype = 2)
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar(position = "fill") + labs(x = "Year", y = "Proportion
of cars", fill = "Transmission") + theme(axis.text.x =
element_text(angle = 45)) + geom_hline(yintercept = 0.5,
linetype = 2)
?geom_bar(position = "fill")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_col(position = "fill") + labs(x = "Year", y = "Proportion
of cars", fill = "Transmission") + theme(axis.text.x =
element_text(angle = 45)) + geom_hline(yintercept = 0.5,
linetype = 2)
?geom_bar(position = "fill")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_col(position = "fill")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar(position = "fill")
?geom_bar(position = "fill")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar(stat = "stack")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar(stat = "stack")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar(stat = "count")
ggplot(gasCars4, aes(factor(year), fill = factor(trany2))) +
geom_bar(position = "stack")
ggplot(vehicles, aes(class))
ggplot(vehicles, aes(class)) + geom_bar()
ggplot(gasCars, aes(class)) + geom_bar()
ggplot(mpgByYr, aes(year)) + geom_bar()
ggplot(mpgByYr, aes(factor(year))) + geom_bar()
ggplot(mpgByYr, aes(mpg,factor(year))) + geom_bar()
ggplot(mpgByYr, aes(factor(year)), mpg) + geom_bar()
ggplot(mpgByYr, aes(factor(year)), mpg) + geom_col()
ggplot(mpgByYr, aes(factor(year)), mpg) + geom_point()
ggplot(mpgByYr, aes(factor(year), mpg) ) + geom_point()
ggplot(mpgByYr, aes(factor(year), mpg) ) + geom_bar()
ggplot(mpgByYr, aes( mpg) ) + geom_point()
ggplot(mpgByYr, aes(avgMPG) ) + geom_point()
ggplot(mpgByYr, aes(avgMPG, year) ) + geom_point()
ggplot(mpgByYr, aes(avgMPG, factor(year)) ) + geom_point()
ggplot(mpgByYr, aes(avgMPG, factor(year)) ) + geom_bar()
ggplot(mpgByYr, aes(avgMPG, factor(year)) ) + geom_col()
ggplot(mpgByYr, aes(factor(year),avgMPG) ) + geom_col()
ggplot(mpgByYr, aes(factor(year),avgMPG) ) + geom_bar()
ggplot(mpgByYr, aes(factor(year),avgMPG) ) + geom_bar(position="stack")
ggplot(mpgByYr, aes(factor(year),avgMPG) ) + geom_bar(position="fill")
ggplot(mpgByYr, aes(factor(year)) ) + geom_bar(position="fill")
ggplot(mpgByYr, aes(factor(year), fill=avgCarSize) ) + geom_bar(position="fill")
ggplot(mpgByYr, aes(factor(year), fill=factor(mpgByYr$avgMPG)) ) + geom_bar(position="fill")
ggplot(mpgByYr, aes(factor(year), fill=factor(mpgByYr$avgMPG)) ) + geom_bar(position="stack")
ggplot(mpgByYr, aes(factor(year), fill=factor(year)) ) + geom_bar(position="stack")
ggplot(mpgByYr, aes(avgCarSize, fill=factor(year)) ) + geom_bar(position="stack")
ggplot(mpgByYr, aes(factor(avgCarSize), fill=factor(year)) ) + geom_bar(position="stack")
ggplot(mpgByYr, aes(year, fill=factor(year)) ) + geom_bar(position="stack")
ggplot(mpgByYr, aes(year, fill=factor(year)) ) + geom_bar(position="stack")
gasCars4
head(gasCars4)
ggplot(gasCars4, aes(year, fill=factor(year)) ) + geom_bar(position="stack")
ggplot(gasCars4, aes(year, fill=factor(year)) ) + geom_bar(position="fill")
ggplot(gasCars4, aes(year, fill=factor(year)) ) + geom_bar(position="stack")
ggplot(gasCars4, aes(year, gasCars4$barrels08,fill=factor(year)) ) + geom_bar(position="stack")
ggplot(gasCars4, aes(year, gasCars4$barrels08,fill=factor(year)) ) + geom_col(position="stack")
ggplot(gasCars4, aes(year, gasCars4$city08,fill=factor(year)) ) + geom_col(position="stack")
ggplot(gasCars4, aes(year, gasCars4$displ,fill=factor(year)) ) + geom_col(position="stack")
ggplot(gasCars4, aes(year, gasCars4$displ,fill=factor(year)) ) + geom_col(position="fill")
ggplot(gasCars4, aes(year, gasCars4$displ,fill=factor(displ)) ) + geom_col(position="fill")
ggplot(gasCars4, aes(year, gasCars4$displ,fill=factor(gasCars4$cylinders)) ) + geom_col(position="fill")
ggplot(gasCars4, aes(year, gasCars$displ,fill=factor(gasCars$cylinders)) ) + geom_col(position="fill")
ggplot(gasCars4, aes(year, gasCars4$cylinders,fill=factor(year)) ) + geom_col(position="fill")
ggplot(gasCars, aes(year, gasCars$cylinders,fill=factor(year)) ) + geom_col(position="fill")
ggplot(gasCars, aes(year, gasCars$cylinders,fill=factor(year)) ) + geom_col()
ggplot(gasCars, aes(year, gasCars$cylinders,fill=factor(year)) ) + geom_bar()
ggplot(gasCars, aes(year, gasCars$cylinders,fill=factor(year)) ) + geom_bar(position = 'fill')
ggplot(gasCars, aes(gasCars$cylinders,fill=factor(year)) ) + geom_bar(position = 'fill')
ggplot(gasCars, aes(gasCars$cylinders,fill=factor(year)) ) + geom_bar()
ggplot(gasCars, aes(gasCars$cylinders) ) + geom_bar()
ggplot(gasCars, aes(gasCars$cylinders) ) + geom_bar(position = 'fill')
ggplot(gasCars, aes(gasCars$cylinders) ) + geom_bar()
ggplot(gasCars, aes(year, fill=cylinders) ) + geom_bar()
ggplot(gasCars, aes(year, fill=cylinders) ) + geom_bar(position = 'fill')
ggplot(gasCars, aes(year, fill=cylinders) ) + geom_col(position = 'fill')
ggplot(gasCars, aes(year, cylinders) ) + geom_col(position = 'fill')
ggplot(gasCars, aes(year, cylinders) ) + geom_col()
ggplot(gasCars, aes(cylinders,year) ) + geom_col()
unique(make)
carsMake <- ddply(gasCars4, ~year, summarise, numberOfMakes =
length(unique(make)))
library(ddply)
carsMake <- ddply(gasCars4, ~year, summarise, numberOfMakes =
length(unique(make)))
library(plyr)
carsMake <- ddply(gasCars4, ~year, summarise, numberOfMakes =
length(unique(make)))
unique(make)
unique(gasCars4$make)
gasCars4$make
unique(gasCars4$make)
length(unique(gasCars4$make))
ddply(gasCars4, ~year)
View(ddply(gasCars4, ~year))
cols(ddply(gasCars4, ~year))
shape(ddply(gasCars4, ~year))
dims(ddply(gasCars4, ~year))
dim(ddply(gasCars4, ~year))
dim(gasCars4)
dim(ddply(gasCars4, ~year, summarize))
ddply(gasCars4, ~year, summarize)
ddply(gasCars4, ~year, summarise)
ddply(gasCars4, ~year, summarise, year)
ddply(gasCars4, ~year, summarize, year)
ddply(gasCars4, ~year, summarize, year) == ddply(gasCars4, ~year, summarise, year)
summarise
summarise == summarize
summarise() == summarize()
summarise(gasCars4) == summarize()
summarise(gasCars4$year) == summarize()
summarise(gasCars4$year)
?summarise
summarise(gasCars4, x = year)
summarise(gasCars4, x = max(year))
summarise(gasCars4, x = unique(year))
summarise(gasCars4, x = length(unique(year)))
summarise(gasCars4, x = length(unique(year)), y=year)
summarise(gasCars4, x = length(unique(year)), y=max(year))
ddply( gasCars4, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, "", summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, year, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, 'year', summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, gasCars4$barrelsA08, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, gasCars4$combE, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, ~combE, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, ~year, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, gasCars4$drive, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, ~drive, summarise, x = length(unique(year)), y=max(year))
ddply( gasCars4, ~drive, summarise, x = length(unique(disok)), y=max(year))
ddply( gasCars4, ~drive, summarise, x = length(unique(displ)), y=max(year))
ddply( gasCars4, ~drive, summarise, x = length(unique(displ)), y=displ)
ggplot(carsMake, aes(year, numberOfMakes)) + geom_point() +
labs(x = "Year", y = "Number of available makes") + ggtitle("Four
cylinder cars")
ggplot(carsMake, aes(year, numberOfMakes)) + geom_point() +
labs(x = "Year", y = "Number of available makes") + ggtitle("Four
cylinder cars") + geom_smooth()
ggplot(carsMake, aes(year, numberOfMakes)) + geom_col() +
labs(x = "Year", y = "Number of available makes") + ggtitle("Four
cylinder cars") + geom_smooth()
ggplot(carsMake, aes(factor(year), numberOfMakes)) + geom_col() +
labs(x = "Year", y = "Number of available makes") + ggtitle("Four
cylinder cars") + geom_smooth()
ggplot(carsMake, aes(factor(year), numberOfMakes)) + geom_col() +
labs(x = "Year", y = "Number of available makes") + ggtitle("Four
cylinder cars")
carsMake <- ddply(gasCars4, ~year, summarise, numberOfMakes =
length(unique(make)))
ggplot(carsMake, aes(year, numberOfMakes)) + geom_point() +
labs(x = "Year", y = "Number of available makes") + ggtitle("Four
cylinder cars")
%hist
hist()
hist(1)
# deb-src [arch=amd64] https://download.docker.com/linux/debian stretch stable
install.packages(c("tidyr", "stringr", "lubridate", "ggplot2", "ggvis", "rgl", "htmlwidgets",
"googleVis", "car", "mgcv", "lme4", "nlme", "randomForest",
"multcomp", "vcd", "glmnet", "survival", "caret", "shiny",
"xtable", "sp ", "maptools", "maps", "ggmap", "jsonlite",
"httr","foreach", "e1071", "gbm", "knitr",
"proto", "labeling", "scales", "manipulate", "reshape2", "plyr"))
install.packages("XML")
install.packages("RSQLite")
install.packages("stringr")
install.packages("ggplot2")
library(XML)
library(RSQLite)
library(stringr)
library(ggplot2)
getOffense <- function(){
year <- 2013
url <-
paste("http://sports.yahoo.com/nfl/stats/byteam?group=Offense&
cat=Total&conference=NFL&year=season_",year,"&sort=530&old_cat
egory=Total&old_group=Offense")
offense <- readHTMLTable(url, encoding = "UTF-8",
colClasses="character")[[7]]
return(offense)
}
offense <- getOffense()
source('~/Proyectos/MLStuff/data_science/football.R', echo=TRUE)
source('~/Proyectos/MLStuff/data_science/football.R', echo=TRUE)
url
url <- paste("http://sports.yahoo.com/nfl/stats/byteam?group=Offense&
cat=Total&conference=NFL&year=season_",year,"&sort=530&old_cat
egory=Total&old_group=Offense")
year = 2013
url <- paste("http://sports.yahoo.com/nfl/stats/byteam?group=Offense&
cat=Total&conference=NFL&year=season_",year,"&sort=530&old_cat
egory=Total&old_group=Offense")
url]
url
readHTMLTable(url)
;
readHTMLTable(url);
url ="http://sports.yahoo.com/nfl/stats/byteam?group=Offense&
cat=Total&conference=NFL&year=season_2013&sort=530&old_cat
egory=Total&old_group=Offense"
readHTMLTable(url);
pwd()
cwd()
source('~/.active-rstudio-document', echo=TRUE)
View(wine)
source('~/Proyectos/MLStuff/data_science/wine.R', echo=TRUE)
View(wine)
source('~/Proyectos/MLStuff/data_science/wine.R', echo=TRUE)
source('~/Proyectos/MLStuff/data_science/wine.R', echo=TRUE)
source('~/Proyectos/MLStuff/data_science/wine.R', echo=TRUE)
install.packages("corrplot")
library(corrplot)
corrplot(cor(wine[, -c(13, 15)]), method = "number", tl.cex = 0.5)
install.packages("corrplot")
library(corrplot)
corrplot(cor(wine), method = "number", tl.cex = 0.5)
#install.packages("corrplot")
library(corrplot)
corrplot(cor(wine), method = "number", tl.cex = 0.5)
library(corrplot)
corrplot(cor(wine[,]), method = "number", tl.cex = 0.5)
library(corrplot)
corrplot(cor(wine[:,:]), method = "number", tl.cex = 0.5)
library(corrplot)
corrplot(cor(wine[, -c(1)]), method = "number", tl.cex = 0.5)
library(corrplot)
corrplot(cor(wine[, -c(13, 15)]), method = "number", tl.cex = 0.5)
library(corrplot)
corrplot(cor(wine[, -c(13, 15)]), method = "number", tl.cex = 5)
library(corrplot)
corrplot(cor(wine[, -c(13, 15)]), method = "number", tl.cex = 1.0)
library(caret)
set.seed(1234) #so that the indices will be the same when re-run
trainIndices = createDataPartition(wine$good, p = 0.8, list = F)
wanted = !colnames(wine) %in% c("free.sulfur.dioxide", "density", "quality",
"color", "white")
wine_train = wine[trainIndices, wanted] #remove quality and color, as well as density and others
wine_test = wine[-trainIndices, wanted]
?createDataPartition
wine_trainplot = predict(preProcess(wine_train[,-10], method="range"),
wine_train[,-10])
featurePlot(wine_trainplot, wine_train$good, "box")
preProcess?
?
?
)
?preProcess
